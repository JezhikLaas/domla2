// <auto-generated />
using D2.MasterData.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace D2.MasterData.Migrations
{
    [DbContext(typeof(MasterDataContext))]
    partial class MasterDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("D2.MasterData.Models.AdministrationUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Edit")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Title")
                        .HasMaxLength(256);

                    b.Property<string>("UserKey")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime?>("YearOfConstuction");

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("Id");

                    b.ToTable("AdministrationUnits");
                });

            modelBuilder.Entity("D2.MasterData.Models.Entrance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AdministrationUnitId");

                    b.Property<DateTime>("Edit")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Title")
                        .HasMaxLength(256);

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("Id");

                    b.HasIndex("AdministrationUnitId");

                    b.ToTable("Entrances");
                });

            modelBuilder.Entity("D2.MasterData.Models.SubUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Edit")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("EntranceId");

                    b.Property<int?>("Floor");

                    b.Property<int?>("Number")
                        .IsRequired();

                    b.Property<string>("Title")
                        .HasMaxLength(256);

                    b.Property<string>("Usage")
                        .HasMaxLength(256);

                    b.Property<uint>("xmin")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid");

                    b.HasKey("Id");

                    b.HasIndex("EntranceId");

                    b.ToTable("SubUnits");
                });

            modelBuilder.Entity("D2.MasterData.Models.Entrance", b =>
                {
                    b.HasOne("D2.MasterData.Models.AdministrationUnit", "AdministrationUnit")
                        .WithMany("Entrances")
                        .HasForeignKey("AdministrationUnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("D2.MasterData.Models.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("EntranceId");

                            b1.Property<string>("City");

                            b1.Property<string>("Number");

                            b1.Property<string>("PostalCode");

                            b1.Property<string>("Street");

                            b1.ToTable("Entrances");

                            b1.HasOne("D2.MasterData.Models.Entrance")
                                .WithOne("Address")
                                .HasForeignKey("D2.MasterData.Models.Address", "EntranceId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("D2.MasterData.Models.CountryInfo", "Country", b2 =>
                                {
                                    b2.Property<Guid>("AddressEntranceId");

                                    b2.Property<string>("Iso2");

                                    b2.Property<string>("Iso3");

                                    b2.Property<string>("Name");

                                    b2.ToTable("Entrances");

                                    b2.HasOne("D2.MasterData.Models.Address")
                                        .WithOne("Country")
                                        .HasForeignKey("D2.MasterData.Models.CountryInfo", "AddressEntranceId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("D2.MasterData.Models.SubUnit", b =>
                {
                    b.HasOne("D2.MasterData.Models.Entrance", "Entrance")
                        .WithMany("SubUnits")
                        .HasForeignKey("EntranceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
